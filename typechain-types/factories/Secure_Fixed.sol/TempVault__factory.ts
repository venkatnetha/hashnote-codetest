/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TempVault,
  TempVaultInterface,
} from "../../Secure_Fixed.sol/TempVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "depositCD",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_secondsToIncrease",
        type: "uint256",
      },
    ],
    name: "increaseLockTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107d8806100616000396000f3fe60806040526004361061004a5760003560e01c8063236c6def1461004f57806327e235e31461007857806351cff8d9146100b5578063a4beda63146100de578063d646a5561461011b575b600080fd5b34801561005b57600080fd5b506100766004803603810190610071919061059d565b610137565b005b34801561008457600080fd5b5061009f600480360381019061009a91906105dd565b610221565b6040516100ac9190610619565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d791906105dd565b610239565b005b3480156100ea57600080fd5b50610105600480360381019061010091906105dd565b6103d3565b6040516101129190610619565b60405180910390f35b610135600480360381019061013091906105dd565b6103eb565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101be90610691565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461021691906106e0565b925050819055505050565b60006020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461027157600080fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116102bc57600080fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054421161030757600080fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff166108fc6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156103cf573d6000803e3d6000fd5b5050565b60016020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361045a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045190610782565b60405180910390fd5b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104a891906106e0565b9250508190555062093a80426104be91906106e0565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053482610509565b9050919050565b61054481610529565b811461054f57600080fd5b50565b6000813590506105618161053b565b92915050565b6000819050919050565b61057a81610567565b811461058557600080fd5b50565b60008135905061059781610571565b92915050565b600080604083850312156105b4576105b3610504565b5b60006105c285828601610552565b92505060206105d385828601610588565b9150509250929050565b6000602082840312156105f3576105f2610504565b5b600061060184828501610552565b91505092915050565b61061381610567565b82525050565b600060208201905061062e600083018461060a565b92915050565b600082825260208201905092915050565b7f6f6e6c79206f776e65722063616e2063616c6c2074686973206d6574686f6400600082015250565b600061067b601f83610634565b915061068682610645565b602082019050919050565b600060208201905081810360008301526106aa8161066e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106eb82610567565b91506106f683610567565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561072b5761072a6106b1565b5b828201905092915050565b7f5a65726f206164647265737320737570706c6965640000000000000000000000600082015250565b600061076c601583610634565b915061077782610736565b602082019050919050565b6000602082019050818103600083015261079b8161075f565b905091905056fea26469706673582212207949ee57b7e44174c611435ba974259b9127d9cd5b1d34fe797082190f7660d964736f6c634300080d0033";

type TempVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TempVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TempVault__factory extends ContractFactory {
  constructor(...args: TempVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TempVault> {
    return super.deploy(overrides || {}) as Promise<TempVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TempVault {
    return super.attach(address) as TempVault;
  }
  override connect(signer: Signer): TempVault__factory {
    return super.connect(signer) as TempVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempVaultInterface {
    return new utils.Interface(_abi) as TempVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TempVault {
    return new Contract(address, _abi, signerOrProvider) as TempVault;
  }
}
