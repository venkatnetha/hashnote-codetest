/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PwnedFixed,
  PwnedFixedInterface,
} from "../../Pwned_Fixed.sol/PwnedFixed";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_request",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061096a806100206000396000f3fe60806040526004361061004e5760003560e01c806327e235e31461005a5780632e1a7d4d146100975780638da5cb5b146100c0578063f340fa01146100eb578063f8b2cb4f1461010757610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c919061051e565b610144565b60405161008e9190610564565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b991906105ab565b61015c565b005b3480156100cc57600080fd5b506100d5610343565b6040516100e291906105e7565b60405180910390f35b6101056004803603810190610100919061051e565b610367565b005b34801561011357600080fd5b5061012e6004803603810190610129919061051e565b610472565b60405161013b9190610564565b60405180910390f35b60016020528060005260406000206000915090505481565b6000811161019f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690610685565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610717565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102709190610766565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161029d906107cb565b60006040518083038185875af1925050503d80600081146102da576040519150601f19603f3d011682016040523d82523d6000602084013e6102df565b606091505b505090508061033f5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033791906107e0565b925050819055505b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610882565b60405180910390fd5b60003411610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041090610914565b60405180910390fd5b34600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461046891906107e0565b9250508190555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104eb826104c0565b9050919050565b6104fb816104e0565b811461050657600080fd5b50565b600081359050610518816104f2565b92915050565b600060208284031215610534576105336104bb565b5b600061054284828501610509565b91505092915050565b6000819050919050565b61055e8161054b565b82525050565b60006020820190506105796000830184610555565b92915050565b6105888161054b565b811461059357600080fd5b50565b6000813590506105a58161057f565b92915050565b6000602082840312156105c1576105c06104bb565b5b60006105cf84828501610596565b91505092915050565b6105e1816104e0565b82525050565b60006020820190506105fc60008301846105d8565b92915050565b600082825260208201905092915050565b7f5a65726f20616d6f756e74207769746864726177616c73206e6f7420616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b600061066f602383610602565b915061067a82610613565b604082019050919050565b6000602082019050818103600083015261069e81610662565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f207769746864726177206660008201527f726f6d20746865206163636f756e742d206465706f7369742066697273740000602082015250565b6000610701603e83610602565b915061070c826106a5565b604082019050919050565b60006020820190508181036000830152610730816106f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107718261054b565b915061077c8361054b565b92508282101561078f5761078e610737565b5b828203905092915050565b600081905092915050565b50565b60006107b560008361079a565b91506107c0826107a5565b600082019050919050565b60006107d6826107a8565b9150819050919050565b60006107eb8261054b565b91506107f68361054b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561082b5761082a610737565b5b828201905092915050565b7f7a65726f206164647265737320737570706c6965640000000000000000000000600082015250565b600061086c601583610602565b915061087782610836565b602082019050919050565b6000602082019050818103600083015261089b8161085f565b9050919050565b7f5a65726f2065746865722073656e742d2073656e6420736f6d6520657468657260008201527f20746f206465706f736974000000000000000000000000000000000000000000602082015250565b60006108fe602b83610602565b9150610909826108a2565b604082019050919050565b6000602082019050818103600083015261092d816108f1565b905091905056fea26469706673582212203559ca24f00be0a15218ff86cb024eb9c4843debdf638df249de35b525fc5f1064736f6c634300080d0033";

type PwnedFixedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PwnedFixedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PwnedFixed__factory extends ContractFactory {
  constructor(...args: PwnedFixedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PwnedFixed> {
    return super.deploy(overrides || {}) as Promise<PwnedFixed>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PwnedFixed {
    return super.attach(address) as PwnedFixed;
  }
  override connect(signer: Signer): PwnedFixed__factory {
    return super.connect(signer) as PwnedFixed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PwnedFixedInterface {
    return new utils.Interface(_abi) as PwnedFixedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PwnedFixed {
    return new Contract(address, _abi, signerOrProvider) as PwnedFixed;
  }
}
