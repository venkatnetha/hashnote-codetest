/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "PwnedAttack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PwnedAttack__factory>;
    getContractFactory(
      name: "AttackSecure",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AttackSecure__factory>;
    getContractFactory(
      name: "PwnedFixed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PwnedFixed__factory>;
    getContractFactory(
      name: "Pwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pwned__factory>;
    getContractFactory(
      name: "TempVaultFixedContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TempVaultFixedContract__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "TempVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TempVault__factory>;

    getContractAt(
      name: "PwnedAttack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PwnedAttack>;
    getContractAt(
      name: "AttackSecure",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AttackSecure>;
    getContractAt(
      name: "PwnedFixed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PwnedFixed>;
    getContractAt(
      name: "Pwned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pwned>;
    getContractAt(
      name: "TempVaultFixedContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TempVaultFixedContract>;
    getContractAt(
      name: "Controller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controller>;
    getContractAt(
      name: "TempVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TempVault>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
